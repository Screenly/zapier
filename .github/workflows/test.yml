name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgbm-dev jq
        npm ci
    - name: Run tests with coverage
      run: |
        # Run tests and capture JSON output
        npm test -- --json > test-results.json || true

        # Extract coverage from JSON and format for summary
        echo "# Test Results (Node ${{ matrix.node-version }})" >> $GITHUB_STEP_SUMMARY
        echo "## Coverage" >> $GITHUB_STEP_SUMMARY
        echo "| Type | Coverage | Details |" >> $GITHUB_STEP_SUMMARY
        echo "|------|----------|----------|" >> $GITHUB_STEP_SUMMARY

        # Use jq to parse the JSON and format the table
        if jq -e '.coverageMap' test-results.json > /dev/null 2>&1; then
          jq -r '.coverageMap |
            to_entries[] |
            select(.key == "total") |
            .value |
            "| Statements | \(.statements.pct | floor)% | \(.statements.covered)/\(.statements.total) |\n| Branches | \(.branches.pct | floor)% | \(.branches.covered)/\(.branches.total) |\n| Functions | \(.functions.pct | floor)% | \(.functions.covered)/\(.functions.total) |\n| Lines | \(.lines.pct | floor)% | \(.lines.covered)/\(.lines.total) |"' test-results.json >> $GITHUB_STEP_SUMMARY
        else
          echo "⚠️ Could not parse coverage data from test results" >> $GITHUB_STEP_SUMMARY
          cat test-results.json >> $GITHUB_STEP_SUMMARY
        fi
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage/
    - name: Run visual tests
      run: xvfb-run --auto-servernum --server-args="-screen 0 1280x800x24" npm run test:visual:ci -- -u
    - name: Upload visual test artifacts
      if: always()
      id: upload-artifacts
      uses: actions/upload-artifact@v4
      with:
        name: visual-test-artifacts
        path: |
          __image_snapshots__
          __image_snapshots__/__diff_output__
    - name: Generate visual test summary
      if: always()
      env:
        ARTIFACT_URL: ${{ steps.upload-artifacts.outputs.artifact-url }}
      run: |
        echo "## Visual Test Results" >> $GITHUB_STEP_SUMMARY
        echo "### Upload Asset Form" >> $GITHUB_STEP_SUMMARY
        echo "[![Upload Asset Form]($ARTIFACT_URL/__image_snapshots__/ci-Upload-Asset-Form-1-snap.png)]($ARTIFACT_URL/__image_snapshots__/ci-Upload-Asset-Form-1-snap.png)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        echo "### Complete Workflow Form" >> $GITHUB_STEP_SUMMARY
        echo "[![Complete Workflow Form]($ARTIFACT_URL/__image_snapshots__/ci-Complete-Workflow-Form-1-snap.png)]($ARTIFACT_URL/__image_snapshots__/ci-Complete-Workflow-Form-1-snap.png)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        echo "### Cleanup Confirmation Form" >> $GITHUB_STEP_SUMMARY
        echo "[![Cleanup Confirmation Form]($ARTIFACT_URL/__image_snapshots__/ci-Cleanup-Confirmation-Form-1-snap.png)]($ARTIFACT_URL/__image_snapshots__/ci-Cleanup-Confirmation-Form-1-snap.png)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        if [ -d "__image_snapshots__/__diff_output__" ]; then
          echo "### ⚠️ Visual Differences Detected" >> $GITHUB_STEP_SUMMARY
          for diff in __image_snapshots__/__diff_output__/*.png; do
            filename=$(basename "$diff" .png)
            echo "#### $filename" >> $GITHUB_STEP_SUMMARY
            echo "[![Diff]($ARTIFACT_URL/__image_snapshots__/__diff_output__/$filename.png)]($ARTIFACT_URL/__image_snapshots__/__diff_output__/$filename.png)" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          done
        fi